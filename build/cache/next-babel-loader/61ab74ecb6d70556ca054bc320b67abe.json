{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Countdown extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      days: null,\n      hours: null,\n      minutes: null,\n      seconds: null,\n      interval: null,\n      time: null\n    });\n\n    _defineProperty(this, \"componentDidMount\", () => {\n      this.getTimeRemaining();\n      const interval = setInterval(() => this.getTimeRemaining(), 1000);\n      this.setState({\n        interval\n      });\n    });\n\n    _defineProperty(this, \"componentWillUnmount\", () => {\n      this.stopCountDown();\n    });\n\n    _defineProperty(this, \"getTimeRemaining\", () => {\n      const {\n        nextClass\n      } = this.props;\n      const time = Date.parse(nextClass) - Date.parse(new Date());\n      const seconds = Math.floor(time / 1000 % 60);\n      const minutes = Math.floor(time / 1000 / 60 % 60);\n      const hours = Math.floor(time / (1000 * 60 * 60) % 24);\n      const days = Math.floor(time / (1000 * 60 * 60 * 24));\n      this.setState({\n        days,\n        hours,\n        minutes,\n        seconds,\n        time\n      });\n    });\n\n    _defineProperty(this, \"stopCountDown\", () => {\n      const {\n        interval\n      } = this.state;\n      clearInterval(interval);\n    });\n  }\n\n  render() {\n    const {\n      days,\n      hours,\n      minutes,\n      seconds,\n      time\n    } = this.state;\n    return /*#__PURE__*/_jsx(\"div\", {\n      children: time > 0 ? /*#__PURE__*/_jsx(Fragment, {\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"container-countdown\",\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: \"countdown-box\",\n            children: [/*#__PURE__*/_jsx(\"span\", {\n              className: \"counter\",\n              children: days\n            }), /*#__PURE__*/_jsx(\"h4\", {\n              children: \"Days\"\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"countdown-box\",\n            children: [/*#__PURE__*/_jsx(\"span\", {\n              className: \"counter\",\n              children: hours\n            }), /*#__PURE__*/_jsx(\"h4\", {\n              children: \"Hours\"\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"countdown-box\",\n            children: [/*#__PURE__*/_jsx(\"span\", {\n              className: \"counter\",\n              children: minutes\n            }), /*#__PURE__*/_jsx(\"h4\", {\n              children: \"Minutes\"\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"countdown-box\",\n            children: [/*#__PURE__*/_jsx(\"span\", {\n              className: \"counter\",\n              children: seconds\n            }), /*#__PURE__*/_jsx(\"h4\", {\n              children: \"Seconds\"\n            })]\n          })]\n        })\n      }) : /*#__PURE__*/_jsx(\"div\", {\n        children: /*#__PURE__*/_jsx(\"h3\", {\n          className: \"countdown-message\",\n          children: \"Class Is In Session\"\n        })\n      })\n    });\n  }\n\n}\n\nCountdown.propTypes = {\n  nextClass: PropTypes.string.isRequired // String formatted 'March, 01 2021'\n\n};\nexport default Countdown;","map":null,"metadata":{},"sourceType":"module"}