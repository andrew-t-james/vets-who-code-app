{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport Image from 'next/image';\nimport format from 'date-fns/format';\nimport { FaRegCalendarAlt } from 'react-icons/fa';\nimport PageHeader from '../../components/PageHeader';\nimport { fetchContent } from '../../utilities/conentful';\n\nfunction BlogPostLink({\n  title,\n  author,\n  publishedDate,\n  slug,\n  description,\n  featureImage\n}) {\n  const excerpt = description.content[0].content[0].value;\n  return /*#__PURE__*/_jsx(\"article\", {\n    className: \"post after\",\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: \"col-md-2\"\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"col-md-8\",\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: \"entry-meta\",\n          children: [/*#__PURE__*/_jsx(Link, {\n            href: `/blog/post/${slug}`,\n            hidefocus: \"true\",\n            style: {\n              outline: 'none'\n            },\n            children: /*#__PURE__*/_jsxs(\"a\", {\n              children: [/*#__PURE__*/_jsx(Image, {\n                className: \"img-responsive\",\n                alt: featureImage.title,\n                src: featureImage.url,\n                height: featureImage.height,\n                width: featureImage.width,\n                style: {\n                  borderRadius: 4\n                }\n              }), /*#__PURE__*/_jsxs(\"h4\", {\n                className: \"entry-title\",\n                children: [title, \".\"]\n              })]\n            })\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"entry-meta-data\",\n            children: [/*#__PURE__*/_jsxs(\"span\", {\n              className: \"author\",\n              style: {\n                paddingRight: 4\n              },\n              children: [' ', \"by\", ' ', /*#__PURE__*/_jsx(\"span\", {\n                className: \"blog-author\",\n                style: {\n                  outline: 'none'\n                },\n                children: author\n              })]\n            }), /*#__PURE__*/_jsxs(\"time\", {\n              className: \"entry-date\",\n              dateTime: \"\",\n              children: [/*#__PURE__*/_jsx(\"span\", {\n                className: \"blog-list-icon\",\n                children: /*#__PURE__*/_jsx(FaRegCalendarAlt, {\n                  color: \"#999999\"\n                })\n              }), format(new Date(publishedDate), 'MMMM dd, yyyy')]\n            })]\n          })]\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"entry-content\",\n          children: /*#__PURE__*/_jsx(\"p\", {\n            children: excerpt\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"entry-meta clearfix\",\n          children: /*#__PURE__*/_jsx(Link, {\n            href: `/blog/${slug}`,\n            className: \"btn btn-charity-default btn-read-more\",\n            hidefocus: \"true\",\n            style: {\n              outline: 'none'\n            },\n            children: /*#__PURE__*/_jsx(\"a\", {\n              children: /*#__PURE__*/_jsx(\"span\", {\n                children: \"Read More\"\n              })\n            })\n          })\n        })]\n      })]\n    })\n  });\n}\n\nBlogPostLink.propTypes = {\n  title: PropTypes.string,\n  author: PropTypes.string,\n  publishedDate: PropTypes.string,\n  slug: PropTypes.string,\n  description: PropTypes.shape({\n    data: PropTypes.object,\n    content: PropTypes.arrayOf(PropTypes.shape({\n      data: PropTypes.object,\n      content: PropTypes.arrayOf(PropTypes.shape({\n        data: PropTypes.object,\n        marks: PropTypes.array,\n        value: PropTypes.string\n      }))\n    })),\n    nodeType: PropTypes.string\n  }),\n  featureImage: PropTypes.shape({\n    fluid: PropTypes.shape({\n      srcSet: PropTypes.string,\n      src: PropTypes.string,\n      sizes: PropTypes.string,\n      aspectRatio: PropTypes.number\n    }),\n    title: PropTypes.string\n  })\n};\n\nconst Blog = ({\n  currentPage,\n  prevPage,\n  nextPage,\n  totalPages,\n  isFirstPage,\n  isLastPage,\n  blogPostCollection\n}) => {\n  const {\n    items\n  } = blogPostCollection;\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(PageHeader, {\n      title: \"blog\"\n    }), /*#__PURE__*/_jsx(\"section\", {\n      id: \"blog-page\",\n      className: \"section  bg-default\",\n      children: /*#__PURE__*/_jsx(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsx(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: \"col-xs-12\",\n            children: items.map(post => /*#__PURE__*/_jsx(BlogPostLink, {\n              title: post.title,\n              author: post.author.authorName,\n              publishedDate: post.publishedDate,\n              slug: post.slug,\n              description: post.body.json,\n              featureImage: post.featureImage\n            }, post.slug))\n          })\n        })\n      })\n    }), /*#__PURE__*/_jsx(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-around',\n        alignItems: 'center',\n        margin: '0 auto'\n      },\n      children: /*#__PURE__*/_jsx(\"nav\", {\n        \"aria-label\": \"Page navigation\",\n        children: /*#__PURE__*/_jsxs(\"ul\", {\n          className: \"pagination\",\n          children: [!isFirstPage && /*#__PURE__*/_jsx(\"li\", {\n            children: /*#__PURE__*/_jsx(Link, {\n              href: prevPage,\n              rel: \"prev\",\n              children: /*#__PURE__*/_jsx(\"a\", {\n                children: /*#__PURE__*/_jsx(\"span\", {\n                  \"aria-hidden\": \"true\",\n                  children: \"Previous\"\n                })\n              })\n            })\n          }), Array.from({\n            length: totalPages\n          }, (_, index) => /*#__PURE__*/_jsx(\"li\", {\n            children: /*#__PURE__*/_jsx(Link, {\n              href: `/blog/${index === 0 ? '1' : index + 1}`,\n              children: /*#__PURE__*/_jsx(\"a\", {\n                children: index + 1\n              })\n            })\n          }, index)), !isLastPage && /*#__PURE__*/_jsx(\"li\", {\n            children: /*#__PURE__*/_jsx(Link, {\n              href: nextPage,\n              rel: \"next\",\n              children: /*#__PURE__*/_jsx(\"a\", {\n                children: /*#__PURE__*/_jsx(\"span\", {\n                  \"aria-hidden\": \"true\",\n                  children: \"Next\"\n                })\n              })\n            })\n          })]\n        })\n      })\n    })]\n  });\n};\n\nasync function getBlogThangs() {\n  const response = await fetchContent(`\n      {\n        blogPostCollection {\n          total\n        }\n      }\n  `);\n  const postPerPage = 3;\n  const {\n    total\n  } = response.blogPostCollection;\n  const numberOfPages = Math.ceil(total / postPerPage);\n  const totalPages = Math.ceil(total / postPerPage);\n  const paths = Array.from({\n    length: numberOfPages\n  }).fill({\n    params: {\n      page: null\n    }\n  }).map((n, i) => ({\n    params: {\n      page: String(i + 1)\n    }\n  }));\n  return {\n    postPerPage,\n    totalPages,\n    numberOfPages,\n    paths\n  };\n}\n\nexport async function getStaticPaths() {\n  const {\n    paths\n  } = await getBlogThangs();\n  return {\n    paths,\n    fallback: false // See the \"fallback\" section in docs\n\n  };\n}\nexport async function getStaticProps(ctx) {\n  var _ctx$params;\n\n  const currentPage = ((_ctx$params = ctx.params) === null || _ctx$params === void 0 ? void 0 : _ctx$params.page) || '1';\n  const {\n    totalPages\n  } = await getBlogThangs();\n  const skip = (currentPage - 1) * totalPages;\n  const nextPage = `/blog/${String(Number(currentPage) + 1)}`;\n  const prevPage = currentPage === '1' ? '/blog/1' : `/blog/${String(Number(currentPage) - 1)}`;\n  const isFirstPage = currentPage === '1';\n  const isLastPage = currentPage === String(totalPages);\n  const {\n    blogPostCollection\n  } = await fetchContent(`\n    {\n      blogPostCollection(order: publishedDate_DESC, skip: ${skip}, limit: 3) {\n        items {\n         publishedDate\n          title\n          featureImage {\n            url\n            height\n            width\n          }\n          slug\n          body {\n            json\n          }\n          author {\n            ... on Author {\n              authorName\n              authorImage {\n                url\n                width\n                height\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n  return {\n    props: {\n      blogPostCollection,\n      nextPage,\n      prevPage,\n      totalPages,\n      isFirstPage,\n      isLastPage\n    }\n  };\n}\nBlog.propTypes = {\n  limit: PropTypes.number,\n  skip: PropTypes.number,\n  isFirstPage: PropTypes.bool,\n  isLastPage: PropTypes.bool,\n  currentPage: PropTypes.number,\n  totalPages: PropTypes.number\n};\nexport default Blog;","map":null,"metadata":{},"sourceType":"module"}