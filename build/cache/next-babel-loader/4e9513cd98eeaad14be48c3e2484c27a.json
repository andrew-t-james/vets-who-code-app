{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { FormAlert, onSubmitSuccess, onSubmitError } from '../'; // Function for input mask on phone number field\n// Formats XXXXXXXXXX as XXX-XXX-XXXX as you type\n\nconst normalizePhone = (value, previousValue) => {\n  if (!value) return value;\n  const onlyNums = value.replace(/[^\\d]/g, ''); // only allows 0-9\n\n  if (!previousValue || value.length > previousValue.length) {\n    if (onlyNums.length === 3) return `${onlyNums}`;\n    if (onlyNums.length === 6) return `${onlyNums.slice(0, 3)}-${onlyNums.slice(3)}-`;\n    if (onlyNums.length <= 3) return onlyNums;\n    if (onlyNums.length <= 6) return `${onlyNums.slice(0, 3)}-${onlyNums.slice(3)}`;\n    return `${onlyNums.slice(0, 3)}-${onlyNums.slice(3, 6)}-${onlyNums.slice(6, 10)}`;\n  }\n};\n\nfunction ContactForm() {\n  const [phone, setPhone] = useState('');\n  const [loading, setLoading] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    errors,\n    reset\n  } = useForm();\n\n  const onSubmit = async (formData, e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    try {\n      const gatewayUrl = 'https://5z9d0ddzr4.execute-api.us-east-1.amazonaws.com/prod/contact';\n      const options = {\n        method: 'POST',\n        body: JSON.stringify(formData)\n      };\n      const response = await fetch(gatewayUrl, options);\n\n      if (response.ok) {\n        onSubmitSuccess('Your form was successfully submitted.');\n        setLoading(false);\n        setPhone('');\n        reset();\n      }\n    } catch (error) {\n      onSubmitError('OOPS! Something went wrong, please try again later.');\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(\"form\", {\n    id: \"s2do-form\",\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: \"col-md-4\",\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxs(\"label\", {\n          htmlFor: \"InputName\",\n          className: \"dark-text\",\n          children: [\"Your Display Name\", /*#__PURE__*/_jsx(\"sup\", {\n            children: \"*\"\n          })]\n        }), /*#__PURE__*/_jsx(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          name: \"name\",\n          id: \"InputName\",\n          placeholder: \"Jody\",\n          ref: register({\n            required: true\n          })\n        })]\n      }), errors.name && errors.name.type === 'required' && /*#__PURE__*/_jsx(FormAlert, {})]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"col-md-4\",\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxs(\"label\", {\n          htmlFor: \"InputEmail\",\n          className: \"dark-text\",\n          children: [\"Your Email Address\", /*#__PURE__*/_jsx(\"sup\", {\n            children: \"*\"\n          })]\n        }), /*#__PURE__*/_jsx(\"input\", {\n          type: \"email\",\n          className: \"form-control\",\n          name: \"email\",\n          id: \"InputEmail\",\n          placeholder: \"jody@example.com\",\n          ref: register({\n            required: true,\n            pattern: {\n              value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n              message: 'Please enter a valid email address jody@example.com'\n            }\n          })\n        })]\n      }), errors.email && errors.email.type === 'required' && /*#__PURE__*/_jsx(FormAlert, {}), errors.email && errors.email.type === 'pattern' && /*#__PURE__*/_jsx(FormAlert, {\n        errorMessage: errors.email.message\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"col-md-4\",\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"InputPhoneNumber\",\n          className: \"dark-text\",\n          children: \"Your Phone Number\"\n        }), /*#__PURE__*/_jsx(\"input\", {\n          type: \"tel\",\n          className: \"form-control\",\n          name: \"phone\",\n          id: \"InputPhoneNumber\",\n          placeholder: \"1234567890\",\n          ref: register({\n            required: true,\n            pattern: {\n              value: /^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]\\d{3}[\\s.-]\\d{4}$/,\n              message: 'Please input a valid phone number XXXXXXXXXX'\n            }\n          }),\n          onChange: event => {\n            const {\n              value\n            } = event.target;\n            setPhone(previousValue => normalizePhone(value, previousValue));\n          },\n          value: phone\n        })]\n      }), errors.phone && errors.phone.type === 'required' && /*#__PURE__*/_jsx(FormAlert, {}), errors.phone && errors.phone.type === 'pattern' && /*#__PURE__*/_jsx(FormAlert, {\n        errorMessage: errors.phone.message\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"col-sm-12\",\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxs(\"label\", {\n          htmlFor: \"message\",\n          className: \"dark-text\",\n          children: [\"Your Message\", /*#__PURE__*/_jsx(\"sup\", {\n            children: \"*\"\n          })]\n        }), /*#__PURE__*/_jsx(\"textarea\", {\n          id: \"message\",\n          className: \"form-control\",\n          rows: \"3\",\n          name: \"message\",\n          placeholder: \"Your Message Here..\",\n          ref: register({\n            required: true\n          })\n        }), errors.message && errors.message.type === 'required' && /*#__PURE__*/_jsx(FormAlert, {})]\n      }), /*#__PURE__*/_jsx(\"input\", {\n        id: \"cfsubmit\",\n        type: \"submit\",\n        name: \"submit\",\n        value: loading ? 'loading...' : 'Submit Message',\n        href: \"#\",\n        className: \"btn btn-charity-default\",\n        title: \"\"\n      })]\n    })]\n  });\n}\n\nContactForm.propTypes = {\n  onSubmitSuccess: PropTypes.func,\n  onSubmitError: PropTypes.func\n};\nexport default ContactForm;","map":null,"metadata":{},"sourceType":"module"}