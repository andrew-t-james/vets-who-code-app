{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { FormAlert, onSubmitSuccess, onSubmitError } from '../';\n\nfunction ApplyForm() {\n  const subscribeButtonRef = useRef();\n  const {\n    register,\n    handleSubmit,\n    errors,\n    reset\n  } = useForm();\n\n  const onSubmit = async (formData, e) => {\n    e.preventDefault();\n\n    try {\n      const gatewayUrl = 'https://5z9d0ddzr4.execute-api.us-east-1.amazonaws.com/prod/subscribe';\n      const options = {\n        method: 'POST',\n        body: JSON.stringify(formData)\n      };\n      const response = await fetch(gatewayUrl, options);\n      const message = 'Thanks for subscribing!';\n\n      if (response.ok) {\n        onSubmitSuccess(message);\n        reset();\n      } else if (!response.ok) {\n        onSubmitError('OOPS Something went wrong, please try again later.');\n      }\n\n      subscribeButtonRef.current.blur();\n    } catch (error) {\n      onSubmitError('OOPS Something went wrong, please try again later.');\n    }\n  };\n\n  return /*#__PURE__*/_jsx(\"form\", {\n    id: \"subscription-form\",\n    onSubmit: handleSubmit(onSubmit),\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: \"col-md-9\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsx(\"input\", {\n            \"aria-label\": \"enter your email address\",\n            className: \"form-control\",\n            id: \"subscriber-email\",\n            placeholder: \"Enter your email address\",\n            name: \"email\",\n            ref: register({\n              required: true,\n              pattern: {\n                value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                message: 'Please enter a valid email address. Example: jody@example.com'\n              }\n            })\n          }), errors.email && errors.email.type === 'required' && /*#__PURE__*/_jsx(FormAlert, {}), errors.email && errors.email.type === 'pattern' && /*#__PURE__*/_jsx(FormAlert, {\n            errorMessage: errors.email.message\n          })]\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"col-md-3 subscribe-button_box\",\n        children: /*#__PURE__*/_jsx(\"button\", {\n          ref: subscribeButtonRef,\n          id: \"subscribe-button\",\n          type: \"submit\",\n          className: \"btn btn-subscribe\",\n          children: \"Subscribe\"\n        })\n      })]\n    })\n  });\n}\n\nApplyForm.propTypes = {\n  onSubmitSuccess: PropTypes.func,\n  onSubmitError: PropTypes.func\n};\nexport default ApplyForm;","map":null,"metadata":{},"sourceType":"module"}