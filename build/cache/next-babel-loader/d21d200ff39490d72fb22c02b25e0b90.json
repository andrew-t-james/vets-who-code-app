{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { FormAlert, onSubmitError, onSubmitSuccess } from '../'; // import './applyform.css'\n\nfunction ApplyForm() {\n  const [loading, setLoading] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    errors,\n    reset\n  } = useForm();\n  const initialCityState = {\n    city: '',\n    state: ''\n  };\n  const [zipError, setZipError] = useState('');\n  const [cityState, setCityState] = useState(initialCityState);\n  const [zipcode, setZipcode] = useState('');\n  const isZipValid = zipcode.length === 5;\n  useEffect(() => {\n    const fetchCityState = async () => {\n      try {\n        if (isZipValid) {\n          var _data$CityStateLookup, _data$CityStateLookup2, _data$CityStateLookup3, _data$CityStateLookup4;\n\n          const response = await fetch(`https://5z9d0ddzr4.execute-api.us-east-1.amazonaws.com/prod/zipcode?zipcode=${zipcode}`, {\n            headers: {\n              accept: 'application/json'\n            },\n            method: 'get'\n          });\n          const data = await response.json();\n\n          if (data !== null && data !== void 0 && (_data$CityStateLookup = data.CityStateLookupResponse) !== null && _data$CityStateLookup !== void 0 && (_data$CityStateLookup2 = _data$CityStateLookup.ZipCode[0]) !== null && _data$CityStateLookup2 !== void 0 && _data$CityStateLookup2.City) {\n            setLoading(false);\n            setZipError('');\n            setCityState({ ...cityState,\n              city: data.CityStateLookupResponse.ZipCode[0].City.join(''),\n              state: data.CityStateLookupResponse.ZipCode[0].State.join('')\n            });\n          } else if (data !== null && data !== void 0 && (_data$CityStateLookup3 = data.CityStateLookupResponse) !== null && _data$CityStateLookup3 !== void 0 && (_data$CityStateLookup4 = _data$CityStateLookup3.ZipCode[0]) !== null && _data$CityStateLookup4 !== void 0 && _data$CityStateLookup4.Error[0]) {\n            setLoading(false);\n            setZipError('Invalid zipcode');\n          }\n        }\n      } catch (error) {\n        setLoading(false);\n        onSubmitError('OOPS! Something went wrong. Please try again later.');\n      }\n    };\n\n    fetchCityState();\n  }, [zipcode]);\n\n  const onSubmit = async (formData, e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    try {\n      const gatewayUrl = 'https://5z9d0ddzr4.execute-api.us-east-1.amazonaws.com/prod/apply';\n      const options = {\n        method: 'POST',\n        body: JSON.stringify(formData)\n      };\n      const response = await fetch(gatewayUrl, options);\n      const message = 'Your application has been submitted successfully!';\n\n      if (response.ok) {\n        onSubmitSuccess(message);\n        setLoading(false);\n        reset();\n        setCityState(initialCityState);\n        setZipcode('');\n      }\n    } catch (error) {\n      onSubmitError('OOPS! Something went wrong, please try again later.');\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(\"form\", {\n    id: \"s2do-form\",\n    action: \"#\",\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: \"col-md-8\",\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxs(\"label\", {\n          htmlFor: \"firstName\",\n          className: \"dark-text\",\n          children: [\"First Name\", /*#__PURE__*/_jsx(\"sup\", {\n            children: \"*\"\n          })]\n        }), /*#__PURE__*/_jsx(\"input\", {\n          className: \"form-control input-lg\",\n          id: \"firstName\",\n          name: \"firstName\",\n          placeholder: \"First Name\",\n          type: \"text\",\n          ref: register({\n            required: true\n          })\n        })]\n      }), errors.firstName && /*#__PURE__*/_jsx(FormAlert, {})]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"col-md-8\",\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxs(\"label\", {\n          htmlFor: \"lastName\",\n          className: \"dark-text\",\n          children: [\"Last Name\", /*#__PURE__*/_jsx(\"sup\", {\n            children: \"*\"\n          })]\n        }), /*#__PURE__*/_jsx(\"input\", {\n          className: \"form-control input-lg\",\n          id: \"lastName\",\n          name: \"lastName\",\n          placeholder: \"Last Name\",\n          type: \"text\",\n          ref: register({\n            required: true\n          })\n        })]\n      }), errors.lastName && /*#__PURE__*/_jsx(FormAlert, {})]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"col-md-8\",\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxs(\"label\", {\n          htmlFor: \"email\",\n          className: \"dark-text\",\n          children: [\"Email\", /*#__PURE__*/_jsx(\"sup\", {\n            children: \"*\"\n          })]\n        }), /*#__PURE__*/_jsx(\"input\", {\n          className: \"form-control input-lg\",\n          id: \"email\",\n          name: \"email\",\n          placeholder: \"Email\",\n          ref: register({\n            required: true,\n            pattern: {\n              value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n              message: 'Please enter a valid email address'\n            }\n          })\n        })]\n      }), errors.email && errors.email.type === 'required' && /*#__PURE__*/_jsx(FormAlert, {}), errors.email && errors.email.type === 'pattern' && /*#__PURE__*/_jsx(FormAlert, {\n        errorMessage: errors.email.message\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"col-md-8\",\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxs(\"label\", {\n          htmlFor: \"zipCode\",\n          className: \"dark-text\",\n          children: [\"Zip Code\", /*#__PURE__*/_jsx(\"sup\", {\n            children: \"*\"\n          })]\n        }), /*#__PURE__*/_jsx(\"input\", {\n          maxLength: \"5\",\n          className: \"form-control input-lg\",\n          id: \"zipCode\",\n          name: \"zipCode\",\n          placeholder: \"Zip Code\",\n          type: \"text\",\n          ref: register({\n            required: true,\n            pattern: {\n              value: /^\\d{5}(?:[-\\s]\\d{4})?$/,\n              message: 'Please enter a valid zip code XXXXX or XXXXX-XXXX'\n            }\n          }),\n          value: zipcode || '',\n          onChange: event => {\n            const {\n              value\n            } = event.target;\n            setLoading(true);\n            setCityState(initialCityState);\n            setZipcode(value.replace(/[^\\d{5}]$/, '').substr(0, 5));\n          }\n        })]\n      }), errors.zipCode && errors.zipCode.type === 'required' && /*#__PURE__*/_jsx(FormAlert, {}), errors.zipCode && errors.zipCode.type === 'pattern' && /*#__PURE__*/_jsx(FormAlert, {\n        errorMessage: errors.zipCode.message\n      }), zipError && /*#__PURE__*/_jsx(FormAlert, {\n        errorMessage: zipError\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"col-md-8\",\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxs(\"label\", {\n          htmlFor: \"city\",\n          className: \"dark-text\",\n          children: [\"City\", /*#__PURE__*/_jsx(\"sup\", {\n            children: \"*\"\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsx(\"input\", {\n            className: \"form-control input-lg\",\n            id: \"city\",\n            name: \"city\",\n            placeholder: \"City\",\n            type: \"text\",\n            ref: register({\n              required: true\n            }),\n            value: cityState.city,\n            readOnly: true\n          }), ' ', /*#__PURE__*/_jsx(\"div\", {\n            className: \"icon-container\",\n            children: /*#__PURE__*/_jsx(\"i\", {\n              className: `${loading && isZipValid ? 'loader' : ''}`\n            })\n          })]\n        })]\n      }), errors.city && /*#__PURE__*/_jsx(FormAlert, {})]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"col-md-8\",\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxs(\"label\", {\n          htmlFor: \"state\",\n          className: \"dark-text\",\n          children: [\"State\", /*#__PURE__*/_jsx(\"sup\", {\n            children: \"*\"\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsx(\"input\", {\n            className: \"form-control input-lg\",\n            id: \"state\",\n            name: \"state\",\n            placeholder: \"State\",\n            type: \"text\",\n            ref: register({\n              required: true\n            }),\n            value: cityState.state,\n            readOnly: true\n          }), ' ', /*#__PURE__*/_jsx(\"div\", {\n            className: \"icon-container\",\n            children: /*#__PURE__*/_jsx(\"i\", {\n              className: `${loading && isZipValid ? 'loader' : ''}`\n            })\n          })]\n        })]\n      }), errors.state && /*#__PURE__*/_jsx(FormAlert, {})]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"col-md-8\",\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxs(\"label\", {\n          htmlFor: \"country\",\n          className: \"dark-text\",\n          children: [\"Country\", /*#__PURE__*/_jsx(\"sup\", {\n            children: \"*\"\n          })]\n        }), /*#__PURE__*/_jsx(\"input\", {\n          id: \"country\",\n          className: \"form-control input-lg\",\n          type: \"text\",\n          placeholder: \"Country\",\n          name: \"country\",\n          ref: register({\n            required: true,\n            pattern: /[A-Za-z]/\n          })\n        })]\n      }), errors.country && /*#__PURE__*/_jsx(FormAlert, {})]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"col-md-8\",\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxs(\"label\", {\n          htmlFor: \"branchOfService\",\n          className: \"dark-text\",\n          children: [\"Branch of Service\", /*#__PURE__*/_jsx(\"sup\", {\n            children: \"*\"\n          })]\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"select-arrow\",\n          children: /*#__PURE__*/_jsxs(\"select\", {\n            id: \"branchOfService\",\n            className: \"form-control input-lg standard-select\",\n            placeholder: \"Branch Of Service\",\n            name: \"branchOfService\",\n            ref: register({\n              required: true,\n              validate: value => value !== 'DEFAULT'\n            }),\n            defaultValue: \"DEFAULT\",\n            children: [/*#__PURE__*/_jsx(\"option\", {\n              value: \"DEFAULT\",\n              disabled: true,\n              children: \"Select your branch\"\n            }), /*#__PURE__*/_jsx(\"option\", {\n              value: \"USA\",\n              children: \"Army (Active Duty)\"\n            }), /*#__PURE__*/_jsx(\"option\", {\n              value: \"USAF\",\n              children: \"Air Force (Active Duty)\"\n            }), /*#__PURE__*/_jsx(\"option\", {\n              value: \"USN\",\n              children: \"Navy (Active Duty)\"\n            }), /*#__PURE__*/_jsx(\"option\", {\n              value: \"USMC\",\n              children: \"Marine Corps (Active Duty)\"\n            }), /*#__PURE__*/_jsx(\"option\", {\n              value: \"USCG\",\n              children: \"Coast Guard\"\n            }), /*#__PURE__*/_jsx(\"option\", {\n              value: \"USAR\",\n              children: \"Army (Reserves)\"\n            }), /*#__PURE__*/_jsx(\"option\", {\n              value: \"USAFR\",\n              children: \"Air Force (Reserves)\"\n            }), /*#__PURE__*/_jsx(\"option\", {\n              value: \"USNR\",\n              children: \"Navy (Reserves)\"\n            }), /*#__PURE__*/_jsx(\"option\", {\n              value: \"USMCR\",\n              children: \"Marine Corps (Reserves)\"\n            }), /*#__PURE__*/_jsx(\"option\", {\n              value: \"USANG\",\n              children: \"Army (National Guard)\"\n            })]\n          })\n        })]\n      }), errors.branchOfService && /*#__PURE__*/_jsx(FormAlert, {\n        errorMessage: \"Please select a branch\"\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"col-md-8\",\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxs(\"label\", {\n          htmlFor: \"yearJoined\",\n          className: \"dark-text\",\n          children: [\"Year Joined\", /*#__PURE__*/_jsx(\"sup\", {\n            children: \"*\"\n          })]\n        }), /*#__PURE__*/_jsx(\"input\", {\n          id: \"yearJoined\",\n          className: \"form-control input-lg\",\n          type: \"text\",\n          placeholder: \"Year Joined\",\n          name: \"yearJoined\",\n          ref: register({\n            required: true,\n            pattern: {\n              value: /[\\d]{4}/,\n              message: 'Please enter year in YYYY format'\n            }\n          })\n        })]\n      }), errors.yearJoined && errors.yearJoined.type === 'required' && /*#__PURE__*/_jsx(FormAlert, {}), errors.yearJoined && errors.yearJoined.type === 'pattern' && /*#__PURE__*/_jsx(FormAlert, {\n        errorMessage: errors.yearJoined.message\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"col-md-8\",\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxs(\"label\", {\n          htmlFor: \"yearSeparated\",\n          className: \"dark-text\",\n          children: [\"Year Separated\", /*#__PURE__*/_jsx(\"sup\", {\n            children: \"*\"\n          })]\n        }), /*#__PURE__*/_jsx(\"input\", {\n          id: \"yearSeparated\",\n          className: \"form-control input-lg\",\n          type: \"text\",\n          placeholder: \"Year Separated\",\n          name: \"yearSeparated\",\n          ref: register({\n            required: true,\n            pattern: {\n              value: /[\\d]{4}/,\n              message: 'Please enter year in YYYY format'\n            }\n          })\n        })]\n      }), errors.yearSeparated && errors.yearSeparated.type === 'required' && /*#__PURE__*/_jsx(FormAlert, {}), errors.yearSeparated && errors.yearSeparated.type === 'pattern' && /*#__PURE__*/_jsx(FormAlert, {\n        errorMessage: errors.yearSeparated.message\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"col-md-8\",\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxs(\"label\", {\n          htmlFor: \"twitterAccountName\",\n          className: \"dark-text\",\n          children: [\"Twitter Profile URL\", /*#__PURE__*/_jsx(\"sup\", {\n            children: \"*\"\n          })]\n        }), /*#__PURE__*/_jsx(\"input\", {\n          className: \"form-control input-lg\",\n          id: \"twitterAccountName\",\n          name: \"twitterAccountName\",\n          placeholder: \"Twitter Profile URL\",\n          type: \"text\",\n          ref: register({\n            required: true,\n            pattern: {\n              value: /http(s)?:\\/\\/(.*\\.)?twitter\\.com\\/[A-z0-9_]+\\/?/,\n              message: 'Please enter a valid twitter account url'\n            }\n          })\n        })]\n      }), errors.twitterAccountName && errors.twitterAccountName.type === 'required' && /*#__PURE__*/_jsx(FormAlert, {}), errors.twitterAccountName && errors.twitterAccountName.type === 'pattern' && /*#__PURE__*/_jsx(FormAlert, {\n        errorMessage: errors.twitterAccountName.message\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"col-md-8\",\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxs(\"label\", {\n          htmlFor: \"linkedInAccountName\",\n          className: \"dark-text\",\n          children: [\"LinkedIn Profile URL\", /*#__PURE__*/_jsx(\"sup\", {\n            children: \"*\"\n          })]\n        }), /*#__PURE__*/_jsx(\"input\", {\n          className: \"form-control input-lg\",\n          id: \"linkedInAccountName\",\n          name: \"linkedInAccountName\",\n          placeholder: \"LinkedIn Profile URL\",\n          type: \"text\",\n          ref: register({\n            required: true,\n            pattern: {\n              value: /http(s)?:\\/\\/([\\w]+\\.)?linkedin\\.com\\/in\\/[A-z0-9_-]+\\/?/,\n              message: 'Please enter a valid LinkedIn url https://linkedin.com/in/user-name'\n            }\n          })\n        })]\n      }), errors.linkedInAccountName && errors.linkedInAccountName.type === 'required' && /*#__PURE__*/_jsx(FormAlert, {}), errors.linkedInAccountName && errors.linkedInAccountName.type === 'pattern' && /*#__PURE__*/_jsx(FormAlert, {\n        errorMessage: errors.linkedInAccountName.message\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"col-md-8\",\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxs(\"label\", {\n          htmlFor: \"githubAccountName\",\n          className: \"dark-text\",\n          children: [\"Github User Name\", /*#__PURE__*/_jsx(\"sup\", {\n            children: \"*\"\n          })]\n        }), /*#__PURE__*/_jsx(\"input\", {\n          className: \"form-control input-lg\",\n          id: \"githubAccountName\",\n          name: \"githubAccountName\",\n          placeholder: \"Github User Name\",\n          type: \"text\",\n          ref: register({\n            required: true,\n            pattern: {\n              value: /^[a-z\\d](?:[a-z\\d]|-(?=[a-z\\d])){0,38}$/,\n              message: 'Please enter your github username'\n            }\n          })\n        })]\n      }), errors.githubAccountName && errors.githubAccountName.type === 'required' && /*#__PURE__*/_jsx(FormAlert, {}), errors.githubAccountName && errors.githubAccountName.type === 'pattern' && /*#__PURE__*/_jsx(FormAlert, {\n        errorMessage: errors.githubAccountName.message\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"col-md-8\",\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxs(\"label\", {\n          htmlFor: \"preworkLink\",\n          className: \"dark-text\",\n          children: [\"Prework Link (Your Hosted Prework Assignment)\", /*#__PURE__*/_jsx(\"sup\", {\n            children: \"*\"\n          })]\n        }), /*#__PURE__*/_jsx(\"input\", {\n          className: \"form-control input-lg\",\n          id: \"preworkLink\",\n          name: \"preworkLink\",\n          placeholder: \"Prework Link\",\n          type: \"text\",\n          ref: register({\n            required: true,\n            pattern: {\n              value: /^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([-.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$/,\n              message: 'Please enter a valid url'\n            }\n          })\n        })]\n      }), errors.preworkLink && errors.preworkLink.type === 'required' && /*#__PURE__*/_jsx(FormAlert, {}), errors.preworkLink && errors.preworkLink.type === 'pattern' && /*#__PURE__*/_jsx(FormAlert, {\n        errorMessage: errors.preworkLink.message\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"col-md-8\",\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxs(\"label\", {\n          htmlFor: \"preworkRepo\",\n          className: \"dark-text\",\n          children: [\"Prework Repo (The github repo in which your code resides)\", /*#__PURE__*/_jsx(\"sup\", {\n            children: \"*\"\n          })]\n        }), /*#__PURE__*/_jsx(\"input\", {\n          className: \"form-control input-lg\",\n          id: \"preworkRepo\",\n          name: \"preworkRepo\",\n          placeholder: \"Prework Repo\",\n          type: \"text\",\n          ref: register({\n            required: true,\n            pattern: {\n              value: /http(s)?:\\/\\/(www\\.)?github.com\\/[^/]+\\/[^/]+/,\n              message: 'Please enter a GitHub repository url https://github.com/user-name/repo-name'\n            }\n          })\n        })]\n      }), errors.preworkRepo && errors.preworkRepo.type === 'required' && /*#__PURE__*/_jsx(FormAlert, {}), errors.preworkRepo && errors.preworkRepo.type === 'pattern' && /*#__PURE__*/_jsx(FormAlert, {\n        errorMessage: errors.preworkRepo.message\n      })]\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"col-md-8\",\n      children: /*#__PURE__*/_jsx(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsx(\"input\", {\n          className: \"btn btn-charity-default\",\n          href: \"#\",\n          name: \"submit\",\n          title: \"\",\n          type: \"submit\",\n          value: loading ? 'loading...' : 'submit'\n        })\n      })\n    })]\n  });\n}\n\nApplyForm.propTypes = {\n  onSubmitSuccess: PropTypes.func,\n  onSubmitError: PropTypes.func\n};\nexport default ApplyForm;","map":null,"metadata":{},"sourceType":"module"}